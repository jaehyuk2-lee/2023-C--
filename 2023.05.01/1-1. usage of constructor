#include <iostream>

using namespace std;

/*class Complex {
public:
    Complex(double real_ = 0, double imag_ = 0){
        real=real_;
        imag=imag_;
    }//매개변수가 값을 가지고 있어서 값을 넣지 않아도,넣어도 무방
    
    double GetReal(){
        return real;
    }
    void SetReal(double real_){
        real=real_;
    }
    double GetImag(){
        return imag;
    }
    void SetImag(double imag_){
        imag=imag_;
    }/*외부에서 변수에 접근하지 못해서 사용하는 함수, 조건에 맞는 변수(real_, imag_)로 들어오면 진짜 변수(real, imag)에 사용 할 수 있게 함
     여기선 조건이 따로 없음*/
private:
    double real;
    double imag;
};

int main(){
    Complex c1;
    Complex c2=Complex(2);//한 개를 선언 안하면 기본값 사용
    Complex c3(2,3);
    
    
    cout << "c1 = " << c1.GetReal() << ", " << c1.GetImag() << endl;
    cout << "c2 = " << c2.GetReal() << ", " << c2.GetImag() << endl;
    cout << "c3 = " << c3.GetReal() << ", " << c3.GetImag() << endl;
    
}*/

//초기화 목록
class Complex {
public:
    Complex() : real(0), imag(0){} //변수에 0 대입
    
    Complex(double real, double imag) : real(real), imag(imag){}
    //괄호 앞은 항상 멤버 변수, 따라서 매개변수와 따로 구별 안해도 상관없음
    
    double GetReal(){
        return real;
    }
    void SetReal(double real_){
        real=real_;
    }
    double GetImag(){
        return imag;
    }
    void SetImag(double imag_){
        imag=imag_;
    }
    
private:
    double real;
    double imag;
};

int main(){
    int a(5);
    
    Complex c1;
    Complex c2=Complex(2,2);
    Complex c3(2,3);
    
    cout << "c1 = " << c1.GetReal() << ", " << c1.GetImag() << endl;
    cout << "c2 = " << c2.GetReal() << ", " << c2.GetImag() << endl;
    cout << "c3 = " << c3.GetReal() << ", " << c3.GetImag() << endl;
    
}
