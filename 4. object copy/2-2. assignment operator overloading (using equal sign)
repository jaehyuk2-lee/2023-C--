#include <iostream>
#include <cstring>
using namespace std;

class String {
public:
    String() {
        cout << "String() 생성" << endl;
        strData = NULL;
        len = 0;
    }
    String(const char *str) {
        cout << "String(입력됨) 생성" << endl;
        len = strlen(str);
        strData = new char[len + 1];
        cout << "strData 주소 할당" << (void*)strData << endl;
        strcpy(strData, str);
    }
    
    String(const String &rhs) {
        len = rhs.len;
        strData = new char[len + 1];
        cout << "strData 깊은복사를 위한 주소 할당 : " << (void*)strData << endl;
        strcpy(strData, rhs.strData);
    }
    
    String &operator=(const String &rhs) {
        if(this != &rhs){
            delete[] strData;
            strData = new char[rhs.len + 1];
            cout << "strData 깊은복사를 위한 주소 할당 : " << (void*)strData << endl;
            strcpy(strData, rhs.strData);
            len = rhs.len;
        }
        
    return *this;
    }//레퍼런스 호출 ~> 불필요한 복사 최소화
    
    ~String() {
        cout << "String() 소멸" << endl;
        cout << "strData 주소 할당해제" << (void*)strData << endl;
        delete[] strData;
        strData = NULL;

    }
    
    char *GetStrData() const {return strData;}
    int GetLen() const {return len;}

private:
    char *strData;
    int len;
};

int main() {
    String s1("Hello");
    String s2(s1);
    String s3("안녕");
    s3 = s1;
    
    cout << s2.GetStrData() << endl;
    cout << s3.GetStrData() << endl;
}
