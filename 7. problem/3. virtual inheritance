#include <iostream>
using namespace std;

struct Person {
    int age;
    virtual ~Person() {}
    void Eat(){
        cout << "먹는다" << endl;
    }
};
struct Student : virtual public Person {
    void Study(){
        cout << "공부한다" << endl;
    }
};
struct Worker : virtual public Person {
    void Work(){
        cout << "일한다" << endl;
    }
};
struct Researcher : Student, Worker {
    
};

int main() {
    Researcher r;
    r.age = 10;
    r.Eat();
    r.Study();
}
//Student나 Worker에 오버라이딩을 해버리면 모호해져서 사용불가
//제약을 통한 해결 : 다중상속은 인터페이스로 부터만 받는다
//인터페이스 : 모든 메서드가 순수가상함수이고 멤버 변수는 없는 클래스
