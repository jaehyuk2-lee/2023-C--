#include <iostream>
using namespace std;

class None {
public:
    int operator()(int x) { return x; }
} none;

class Square {
public:
    int operator()(int x) { return x * x; }
} square;

class Func {
public:
    int operator()(int x) { return x * (x - 15) / 2; }
} func;

template<typename T>
int ArrFnMin(const int arr[], int n, T f) {
    int min = f(arr[0]);
    for(int i = 1; i < n; i++) {
        if(f(arr[i]) <= min) min = f(arr[i]);
    }
    return min;
}

int main() {
    int arr[5] = {4, 2, 3, -2, -1};
    
    cout << ArrFnMin(arr, 5, none) << endl;
    cout << ArrFnMin(arr, 5, square) << endl;
    cout << ArrFnMin(arr, 5, func) << endl;
}
