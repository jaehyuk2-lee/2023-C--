#include <iostream>
#include <functional>
using namespace std;

class None {
public:
    int operator()(int x) {return x;}
} none;

class Square {
public:
    int operator()(int x) {return x * x;}
} square;

class myFunc {
public:
    int operator()(int x) {return 3 * x - 1;}
} myFunc;

template<typename T>
int arrFn(const int arr[], const int n, T f){
    int min = f(arr[0]);
    for(int i=1; i < n; i++){
        if(f(arr[i]) < min) min =f(arr[i]);
    }
    return min;
}

int main() {
    int arr[7] = { 3, 1, -4, 1, 5, 9, -2 };
    cout << arrFn(arr, 7, none) << endl;
    cout << arrFn(arr, 7, square) << endl;
    cout << arrFn(arr, 7, myFunc) << endl;
}
