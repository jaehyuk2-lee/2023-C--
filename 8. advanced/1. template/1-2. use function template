#include <iostream>
#include <string>
using namespace std;

class Vector {
public:
    Vector(float x, float y) : x(x), y(y) {}
    float GetX() const { return x; }
    float GetY() const { return y; }
    
    Vector &operator+=(const Vector &rhs) {
        x += rhs.x;
        y += rhs.y;
        return *this;
    }
    
private:
    float x, y;
};

template <typename T>
T GetArrSum (const T* arr, int n) {
    T sum = arr[0]; //T() 기본생성자로 대입 가능 (반복문 0부터)
    for(int i = 1; i < n; i++) {
        sum += arr[i];
    }
    return sum;
}

int main() {
    int    arr[5] = { 3, 1, 4, 1, 5 };
    float  farr[5] = { 3.1, 1.2, 4.3, 1.4, 5.5 };
    string sarr[3] = { "재 ", "혁 ", "리 " };
    
    Vector varr [3] = { Vector(1, 2) ,Vector(3, 4), Vector(5, 6) };
    Vector vsum = GetArrSum(varr, 3);
    
    cout << GetArrSum(arr, 5) << endl;
    cout << GetArrSum(farr, 5) << endl;
    cout << GetArrSum(sarr, 3) << endl;
    cout << vsum.GetX() << ", " << vsum.GetY() << endl;
}
