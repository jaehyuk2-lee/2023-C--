#include <iostream>
#include <string>
using namespace std;

class Vector2 {
public:
    Vector2() : x(0), y(0) {}
    Vector2(int x, int y) : x(x), y(y) {}
    
    int GetX() {return x;}
    int GetY() {return y;}
    
    Vector2 &operator+= (const Vector2 &rhs){
        x += rhs.x;
        y += rhs.y;
        
        return *this;
    }
    
private:
    int x, y;
};

template<typename T>
T getArraySum(const T arr[], int n){
    T sum = T();
    for(int i = 0; i < n; i++){
        sum += arr[i];
    }
    return sum;
}

int main() {
    int iarr[5] = { 3, 1, 4, 1, 5 };
    double darr[5] = { 3.1, 1.2, 4.3, 1.4 ,5.5 };
    Vector2 varr[3] = { Vector2(1,2), Vector2(2,3), Vector2(3,4) };
    string sarr[3] = { "abc", "def", "ghi" };
    
    int isum = getArraySum<int>(iarr, 5);
    double dsum = getArraySum<double>(darr, 5);
    Vector2 vsum = getArraySum<Vector2>(varr, 3);
    string ssum = getArraySum<string>(sarr, 3);
    
    cout << isum << endl;
    cout << dsum << endl;
    cout << vsum.GetX() << ", " << vsum.GetY() << endl;
    cout << ssum << endl;
}
