#include <iostream>
#include <memory>
using namespace std;

class Test {
public:
    Test(int x) : x(x) {cout << "생성자" << endl;}
    ~Test() {cout << "소멸자" << endl;}
    
    int GetX() const { return x; }
private:
    int x;
};

int main() {
    weak_ptr<Test> b; //use_count에 관여 X
    {
        shared_ptr<Test> a(new Test(5));
        b = a;
        cout << a.use_count() << endl; 
        cout << b.use_count() << endl;
        if (!b.expired()){
            cout << b.lock()->GetX() << endl; //a소멸 전 참조 가능
        }
    } //a소멸
    
    cout << b.use_count() << endl; //이미 소멸된 위치 가르킴
    
    if (!b.expired()){
            cout << b.lock()->GetX() << endl;
        }
}
//weak_ptr : 소유권 없는 포인터
